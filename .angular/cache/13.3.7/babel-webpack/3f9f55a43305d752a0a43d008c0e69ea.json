{"ast":null,"code":"import { retry, catchError, throwError } from 'rxjs';\nimport { API } from 'src/environments/api_variables';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ApiService = /*#__PURE__*/(() => {\n  class ApiService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    getRepos() {\n      return this.http.get(API.repos).pipe(retry(1), catchError(this.handleError));\n    }\n\n    getTabInfo() {\n      return this.http.get(API.tabInfo).pipe(retry(1), catchError(this.handleError));\n    }\n\n    handleError(error) {\n      let errorMessage = '';\n\n      if (error.error instanceof ErrorEvent) {\n        // client-side error\n        errorMessage = `Error: ${error.error.message}`;\n      } else {\n        // server-side error\n        errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n      }\n\n      return throwError(() => {\n        alert(`Error Obtaining Data: ${errorMessage}`);\n      });\n    }\n\n  }\n\n  ApiService.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n  return ApiService;\n})();","map":null,"metadata":{},"sourceType":"module"}